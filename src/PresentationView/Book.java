/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PresentationView;

import ControllerUtil.BookController;
import ControllerUtil.bookCategoryController;
import ModdleEntity.*;
import ControllerUtil.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.util.StringJoiner;
import javax.swing.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.Transaction;
/**
 *
 * @author duncan
 */
public class Book extends javax.swing.JInternalFrame {
 private final BookController bookController = new BookController();
 private final bookCategoryController categoryController = new bookCategoryController();
 private ModdleEntity.BookCategory bookCategory = new ModdleEntity.BookCategory();
 private ModdleEntity.Book book = new ModdleEntity.Book();
 Session session = HibernateUtil.getSessionFactory().openSession();
 Session session1 = HibernateUtil.getSessionFactory().openSession();
        Transaction tr = null;
    Connection conn;
 Statement st;
 PreparedStatement pst;
 ResultSet rs;
    /**
     * Creates new form Book
     */
    public Book() {
        initComponents();
      // conn=DatabaseConnection.getConnection();
     UpdateTable();  
     //UpdateTableCategory();
     fillCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void clear(){
        // clear fields of book
        this.txtbookId.setText("");
        this.txttitle.setText("");
        this.txtPublishingHouse.setText("");
        this.txtDateOfPublication.setDate(null);
        this.txtauthor.setText("");
        this.txtpages.setText("");
        
        // clear fields of bookCategory
        
        this.txtCategoryId.setText("");
        this.txtCategoryName.setText("");
        
    }
    public void fillCombo(){
        
        tr=session.beginTransaction();
        SQLQuery query = session.createSQLQuery("select category_Name from book_category");
        List rs = query.list();
        for(Object cl: rs){
            String name = cl.toString();
            this.jComboBoxbookCategroy.addItem(name);
       }
        session.close();
// JComboBox<String> combo = new JComboBox<>();
////       this.categoryController.findAll().stream().forEach((category)->{
////           combo.addItem(new Object[]{category.getCategoryName()});
////       });
////       this.jComboBoxbookCategroy.addItem(combo);
//       List<BookCategory> categ = new ArrayList<>();
//       for(BookCategory catName : categ){
//           StringJoiner stri = new StringJoiner("");
//           stri.add(catName.getCategoryName());
//           combo.addItem(stri.toString());
//       }
//       this.jComboBoxbookCategroy.add(combo);
    }
    public void UpdateTable(){
        DefaultTableModel dtm = new DefaultTableModel();
        DefaultTableModel dtm1 = new DefaultTableModel();
        dtm1.addColumn(("category_id"));
        dtm1.addColumn(("category_name"));
        dtm.addColumn(("bookId"));
        dtm.addColumn(("bookTitle"));
        dtm.addColumn(("publishingHouse"));
        dtm.addColumn(("dateOfPublication"));
        dtm.addColumn(("author"));
        dtm.addColumn(("pages"));
        dtm.addColumn(("bookcategory"));
        this.bookController.findAll().stream().forEach((book) -> {
            dtm.addRow(new Object[] {
                book.getBookId(), book.getBookTitle(), book.getPublishingHouse() , book.getDateOfPublication() , book.getAuthor(), book.getPages(), book.getCategoryId()
            });
     });
        this.txttable1.setModel(dtm);
        this.categoryController.findAll().stream().forEach((bookCategory)->{
            dtm1.addRow(new Object[] {bookCategory.getCategoryId(), bookCategory.getCategoryName()});            
        });
        this.txtTable.setModel(dtm1);
            }
    
//     try {
//         String sql="select * from book";
//         pst=conn.prepareStatement(sql);
//         rs=pst.executeQuery(sql);
//         txttable1.setModel(DbUtils.resultSetToTableModel(rs));
//         
//     } catch (SQLException ex) {
//         Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
//     }
//    }
//      public void UpdateTableCategory(){
//     try {
//         String sql="select * from book_category";
//         pst=conn.prepareStatement(sql);
//         rs=pst.executeQuery(sql);
//         txtTable.setModel(DbUtils.resultSetToTableModel(rs));
//         
//     } catch (SQLException ex) {
//         Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
//     }
//    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCategoryId = new javax.swing.JTextField();
        txtCategoryName = new javax.swing.JTextField();
        btnaddBook = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTable = new javax.swing.JTable();
        jButton1Delete = new javax.swing.JButton();
        jButton2Update = new javax.swing.JButton();
        jButton3Clear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txttable1 = new javax.swing.JTable();
        save = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtbookId = new javax.swing.JTextField();
        txttitle = new javax.swing.JTextField();
        txtPublishingHouse = new javax.swing.JTextField();
        txtauthor = new javax.swing.JTextField();
        txtpages = new javax.swing.JTextField();
        txtDateOfPublication = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxbookCategroy = new javax.swing.JComboBox();
        jButtonDelete = new javax.swing.JButton();
        jButton1Update = new javax.swing.JButton();
        jButton1Clear = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setText("CategoryID");

        jLabel8.setText(" CategoryName");

        txtCategoryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategoryIdActionPerformed(evt);
            }
        });

        txtCategoryName.setText(" ");

        btnaddBook.setText(" Add Book");
        btnaddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddBookActionPerformed(evt);
            }
        });

        txtTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        txtTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(txtTable);

        jButton1Delete.setText("Delete");
        jButton1Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1DeleteActionPerformed(evt);
            }
        });

        jButton2Update.setText("Update");
        jButton2Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2UpdateActionPerformed(evt);
            }
        });

        jButton3Clear.setText(" Clear");
        jButton3Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCategoryId)
                    .addComponent(txtCategoryName, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(btnaddBook)
                        .addGap(27, 27, 27)
                        .addComponent(jButton1Delete)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2Update)
                        .addGap(47, 47, 47)
                        .addComponent(jButton3Clear))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(524, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCategoryId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnaddBook)
                    .addComponent(jButton1Delete)
                    .addComponent(jButton2Update)
                    .addComponent(jButton3Clear))
                .addGap(75, 75, 75)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Book Category", jPanel2);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txttable1.setBorder(new javax.swing.border.MatteBorder(null));
        txttable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        txttable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txttable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(txttable1);

        save.setText("save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Book"));
        jPanel3.setToolTipText("Book");

        jLabel4.setText("Book id");

        jLabel5.setText("title");

        jLabel1.setText("Publication house");

        jLabel2.setText("DateofPublication");

        jLabel6.setText("Pages");

        jLabel3.setText("Author");

        txtbookId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbookIdActionPerformed(evt);
            }
        });

        txttitle.setText(" ");

        txtauthor.setText(" ");

        jLabel9.setText("Book category");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtauthor, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpages, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxbookCategroy, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(jLabel5))
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtDateOfPublication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txttitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtbookId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPublishingHouse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtbookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(txttitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txtPublishingHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtDateOfPublication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtauthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBoxbookCategroy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButton1Update.setText("Update");
        jButton1Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1UpdateActionPerformed(evt);
            }
        });

        jButton1Clear.setText("Clear ");
        jButton1Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(172, 172, 172)
                            .addComponent(save)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonDelete)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1Update)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1Clear))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(42, 42, 42)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(jButtonDelete)
                    .addComponent(jButton1Update)
                    .addComponent(jButton1Clear))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Book", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1027, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 191, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCategoryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategoryIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoryIdActionPerformed

    private void btnaddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddBookActionPerformed
   try {
       bookCategory.setCategoryId(this.txtCategoryId.getText());
       bookCategory.setCategoryName(this.txtCategoryName.getText());
       this.categoryController.create(bookCategory);
       JOptionPane.showMessageDialog(null, "Added a category successful");
       UpdateTable();
       clear();
//   JDBC querying
//         // TODO add your handling code here:
//         String categoryName=txtCategoryName.getText();
//         String categoryId=txtCategoryId.getText();
//         String sql="Insert into book_category values(?,?)";
//         pst =conn.prepareStatement(sql);
//         pst.setString(1,categoryName);
//         pst.setString(2,categoryId);
//         pst.execute();
//         System.out.println("saved book categoty");
//         UpdateTableCategory();
//         pst.close();
     } catch (Exception ex) {
         Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
         JOptionPane.showMessageDialog(null, ex.getMessage());
     }
    }//GEN-LAST:event_btnaddBookActionPerformed

    private void txtbookIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbookIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbookIdActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // Hibernate saving or create
        try {
            book.setBookId(this.txtbookId.getText());
            book.setBookTitle(this.txttitle.getText());
            book.setPublishingHouse(this.txtPublishingHouse.getText());
            book.setDateOfPublication(this.txtDateOfPublication.getDate());
            book.setAuthor(this.txtauthor.getText());
            book.setPages(Integer.valueOf(this.txtpages.getText()));
            tr= session1.beginTransaction();
            SQLQuery query = session1.createSQLQuery("select category_Id from book_category where category_Name=?");
            query.setParameter(0, this.jComboBoxbookCategroy.getSelectedItem().toString());
            List rn = query.list();
            book.setCategoryId(rn.toString());
            session1.close();
            this.bookController.create(book);
            JOptionPane.showMessageDialog(null, "Add new book successfully");
            UpdateTable();
            clear();

            //
            //         // TODO add your handling code here:
            //         String bookId=txtbookId.getText();
            //         String bookTitle=txttitle.getText();
            //         String publicationHouse=txtpublicationHouse.getText();
            //         String Dateofpublication=txtdateOfPublication.getText();
            //         String author=txtauthor.getText();
            //         String pages=txtpages.getText();
            //         String sql="insert into book values(?,?,?,?,?,?)";
            //         pst=conn.prepareStatement(sql);
            //         pst.setString(1, bookId);
            //         pst.setString(2, bookTitle);
            //         pst.setString(3, publicationHouse);
            //         pst.setString(4, Dateofpublication);
            //         pst.setString(5,author);
            //         pst.setString(6,pages);
            //         pst.execute();
            //         UpdateTable();
            //         pst.close();
            //
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveActionPerformed
    
    private void update(){
        int index = this.txttable1.getSelectedRow();
        String bookId = this.txttable1.getValueAt(index, 0).toString();
        ModdleEntity.Book book = this.bookController.find(bookId);
        this.txtbookId.setText(book.getBookId());
        this.txttitle.setText(book.getBookTitle());
        this.txtPublishingHouse.setText(book.getPublishingHouse());
        this.txtDateOfPublication.setDate(book.getDateOfPublication());
        this.txtauthor.setText(book.getAuthor());
        this.txtpages.setText(Integer.toString(book.getPages()));
        this.jComboBoxbookCategroy.setSelectedItem(bookCategory.getCategoryName());
    }
    private void txttable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txttable1MouseClicked
        // TODO add your handling code here:
        try{
            update();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_txttable1MouseClicked

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        Delete();
         clear();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButton1UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1UpdateActionPerformed
        // TODO add your handling code here:
        try{
            book.setBookId(this.txtbookId.getText());
            book.setBookTitle(this.txttitle.getText());
            book.setPublishingHouse(this.txtPublishingHouse.getText());
            book.setDateOfPublication(this.txtDateOfPublication.getDate());
            book.setAuthor(this.txtauthor.getText());
            book.setPages(Integer.valueOf(this.txtpages.getText()));
            this.bookController.update(book);
            JOptionPane.showMessageDialog(null, "Update a book successfully");
            UpdateTable();
             clear();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton1UpdateActionPerformed

    private void jButton1ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ClearActionPerformed
        // TODO add your handling code here:
         clear();
    }//GEN-LAST:event_jButton1ClearActionPerformed

    private void jButton3ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ClearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jButton3ClearActionPerformed

    private void txtTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTableMouseClicked
        // TODO add your handling code here:
        try{
            int index = this.txtTable.getSelectedRow();
            String categoryId = this.txtTable.getValueAt(index, 0).toString();
            bookCategory = this.categoryController.find(categoryId);
            this.txtCategoryId.setText(bookCategory.getCategoryId());
            this.txtCategoryName.setText(bookCategory.getCategoryName());
        }
        catch(Exception e){
            
        }
        
    }//GEN-LAST:event_txtTableMouseClicked

    private void jButton1DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1DeleteActionPerformed
        // TODO add your handling code here:
        try{
             int result = JOptionPane.showConfirmDialog(null, "Are you Sure", "confirm",JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
         int index1 = this.txtTable.getSelectedRow();
            String categoryId = this.txtTable.getValueAt(index1, 0).toString();
            bookCategory = this.categoryController.find(categoryId);
            this.categoryController.delete(bookCategory);
            UpdateTable();
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        clear();
    }//GEN-LAST:event_jButton1DeleteActionPerformed

    private void jButton2UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2UpdateActionPerformed
        // TODO add your handling code here:
        try{
            bookCategory.setCategoryId(this.txtCategoryId.getText());
            bookCategory.setCategoryName(this.txtCategoryName.getText());
            this.categoryController.update(bookCategory);
            UpdateTable();
            clear();
            
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton2UpdateActionPerformed

    private void Delete(){
         try{
        int result = JOptionPane.showConfirmDialog(null, "Are you Sure", "confirm",JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            
            // book delete
            
            int index = this.txttable1.getSelectedRow();
            String bookId = this.txttable1.getValueAt(index, 0).toString();
            book = this.bookController.find(bookId);
            this.bookController.delete(book);
            
            // Category Delete
            
            
            UpdateTable();
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaddBook;
    private javax.swing.JButton jButton1Clear;
    private javax.swing.JButton jButton1Delete;
    private javax.swing.JButton jButton1Update;
    private javax.swing.JButton jButton2Update;
    private javax.swing.JButton jButton3Clear;
    private javax.swing.JButton jButtonDelete;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JComboBox jComboBoxbookCategroy;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton save;
    private javax.swing.JTextField txtCategoryId;
    private javax.swing.JTextField txtCategoryName;
    private com.toedter.calendar.JDateChooser txtDateOfPublication;
    private javax.swing.JTextField txtPublishingHouse;
    private javax.swing.JTable txtTable;
    private javax.swing.JTextField txtauthor;
    private javax.swing.JTextField txtbookId;
    private javax.swing.JTextField txtpages;
    private javax.swing.JTable txttable1;
    private javax.swing.JTextField txttitle;
    // End of variables declaration//GEN-END:variables
}
